services:
    auth-service:
        build:
            context: .
            dockerfile: platforms/microservices/auth-service/Dockerfile.prod
        container_name: auth-service-prod
        ports:
            - '4001:4001'
        env_file:
            - ./platforms/microservices/auth-service/.env.production
        networks:
            - api_network
        command: ['npm', 'start']

    user-service:
        build:
            context: .
            dockerfile: platforms/microservices/user-service/Dockerfile.prod
        container_name: user-service-prod
        ports:
            - '4002:4002'
        env_file:
            - ./platforms/microservices/user-service/.env.production
        networks:
            - api_network
        command: ['npm', 'start']

    restaurant-service:
        build:
            context: .
            dockerfile: platforms/microservices/restaurant-service/Dockerfile.prod
        container_name: restaurant-service-prod
        ports:
            - '4003:4003'
        env_file:
            - ./platforms/microservices/restaurant-service/.env.production
        networks:
            - api_network
        command: ['npm', 'start']

    mongodb-user:
        image: mongo:latest
        container_name: db-mongodb-user-prod
        ports:
            - '27019:27017'
        volumes:
            - type: bind
              source: ./platforms/data/mongodb/user-service
              target: /data/db
        networks:
            - api_network

    mongodb-restaurant:
        image: mongo:latest
        container_name: db-mongodb-restaurant-prod
        ports:
            - '27018:27017'
        volumes:
            - type: bind
              source: ./platforms/data/mongodb/restaurant-service
              target: /data/db
        networks:
            - api_network

    mssql-auth-service:
        image: mcr.microsoft.com/mssql/server:2019-latest
        container_name: db-mssql-auth-prod
        ports:
            - '1433:1433'
        volumes:
            - ./platforms/data/sqlserver/auth-service/data:/var/opt/mssql/data
            - ./platforms/data/sqlserver/auth-service/log:/var/opt/mssql/log
            - ./platforms/data/sqlserver/auth-service/secrets:/var/opt/mssql/secrets
        environment:
            SA_PASSWORD: 'ProdPassword123!'
            ACCEPT_EULA: 'Y'
        networks:
            - api_network

    nginx-gateway:
        build:
            context: .
            dockerfile: platforms/nginx-gateway/Dockerfile
        container_name: nginx-gateway-prod
        ports:
            - '80:80'
        env_file:
            - ./platforms/nginx-gateway/.env.production
        environment:
            - ENV=production
        networks:
            - api_network

networks:
    api_network:
        driver: bridge
