user nginx;
worker_processes auto;
pid /var/run/nginx.pid;
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    server_tokens off;
    client_max_body_size 10M;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";

    # Upstreams pour staging
    upstream auth_service {
        server auth-service-staging:4001 max_fails=3 fail_timeout=5s;
        server host.docker.internal:4001 max_fails=3 fail_timeout=5s;
        keepalive 16;
    }
    upstream user_service {
        server user-service-staging:4002 max_fails=3 fail_timeout=5s;
        server host.docker.internal:4002 max_fails=3 fail_timeout=5s;
        keepalive 16;
    }
    upstream restaurant_service {
        server restaurant-service-staging:4003 max_fails=3 fail_timeout=5s;
        server host.docker.internal:4003 max_fails=3 fail_timeout=5s;
        keepalive 16;
    }

    server {
        listen 80;
        server_name api-staging.cesimange.com;

        location /health {
            access_log off;
            return 200 "OK\n";
        }

        location /api/auth {
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /api/user {
            proxy_pass http://user_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /api/restaurant {
            proxy_pass http://restaurant_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location / {
            return 200 "Bienvenue sur l'API Gateway en STAGING!\n";
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
