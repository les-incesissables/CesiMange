# ===== Stage 1 : Builder =====
FROM node:22.14-alpine AS builder
WORKDIR /app

# Copier uniquement les fichiers de dépendances pour profiter du cache
COPY platforms/services/data-access-layer/package*.json platforms/services/data-access-layer/
COPY platforms/services/base-classes/package*.json platforms/services/base-classes/
COPY platforms/microservices/user-service/package*.json platforms/microservices/user-service/

# Installer les dépendances pour les modules partagés
WORKDIR /app/platforms/services/data-access-layer
RUN npm install

WORKDIR /app/platforms/services/base-classes
RUN npm install

# Installer les dépendances pour le user-service
WORKDIR /app/platforms/microservices/user-service
RUN npm install

# Copier le reste du code du user-service (le bind mount peut écraser ces fichiers en dev)
COPY platforms/microservices/user-service platforms/microservices/user-service

# ===== Stage 2 : Image finale pour le développement =====
FROM node:22.14-alpine
WORKDIR /app

# Copier uniquement le dossier du microservice depuis l'étape builder
COPY --from=builder /app/platforms/microservices/user-service platforms/microservices/user-service

WORKDIR /app/platforms/microservices/user-service

# Installer tsconfig-paths, nodemon et autres outils pour le hot reload
RUN npm install -D tsconfig-paths && \
    npm cache clear --force && \
    npm install -g nodemon && \
    npm install --no-audit && \
    mkdir -p node_modules/.cache && chmod -R 777 node_modules/.cache

EXPOSE 4002
CMD ["npm", "run", "dev"]
